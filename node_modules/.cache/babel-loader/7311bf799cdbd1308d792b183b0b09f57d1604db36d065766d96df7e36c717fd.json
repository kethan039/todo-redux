{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\todoApp-redux-react\\\\src\\\\redux\\\\Todo App.js\",\n  _s = $RefreshSig$();\n// Import necessary modules from React and React Redux\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// Import action creators from local actions file\nimport { addTodo, deleteTodo, editTodo } from \"./actions\";\n\n// Import CSS file for styling\nimport \"./App.css\";\n\n// Define the functional component App\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Get the todos array from the Redux store\n  const todos = useSelector(state => state.todos);\n\n  // Get the dispatch function from the Redux store\n  const dispatch = useDispatch();\n\n  // Initialize state variables using useState hook\n  const [text, setText] = useState(\"\"); // for input text\n  const [editIndex, setEditIndex] = useState(null); // for tracking index of todo being edited\n\n  // Function to handle adding or editing a todo\n  const handleAddTodo = () => {\n    if (text.trim() !== \"\") {\n      // Check if input text is not empty\n      if (editIndex !== null) {\n        // If editing an existing todo\n        dispatch(editTodo(editIndex, text)); // Dispatch editTodo action\n        setEditIndex(null); // Reset editIndex\n      } else {\n        // If adding a new todo\n        dispatch(addTodo(text)); // Dispatch addTodo action\n      }\n      setText(\"\"); // Clear the input text\n    }\n  };\n\n  // Function to handle editing a todo\n  const handleEditTodo = (index, todo) => {\n    setText(todo); // Set input text to the current todo text\n    setEditIndex(index); // Set the index of todo being edited\n  };\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App using Redux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Enter a new task...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleAddTodo,\n        children: editIndex !== null ? \"Edit\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo-item\",\n        children: [editIndex === index ?\n        /*#__PURE__*/\n        // If editing the current todo\n        _jsxDEV(\"input\", {\n          type: \"text\",\n          value: text // Set the value to the current todo text\n          ,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this) :\n        /*#__PURE__*/\n        // If not editing, display todo text\n        _jsxDEV(\"span\", {\n          className: \"todo-text\",\n          children: todo.todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: editIndex === index ?\n          /*#__PURE__*/\n          // If editing the current todo\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-button\",\n              onClick: () => {\n                dispatch(editTodo(index, text)); // Dispatch editTodo action\n                setEditIndex(null); // Reset editIndex\n                setText(\"\"); // Clear input text\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-button\",\n              onClick: () => {\n                setEditIndex(null); // Reset editIndex\n                setText(\"\"); // Clear input text\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) :\n          /*#__PURE__*/\n          // If not editing, display edit/delete buttons\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: () => handleEditTodo(index, todo.todo),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => dispatch(deleteTodo(index)),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n// Export the App component as the default export\n_s(App, \"xkWX1P8aZIpUueth/jIrnoQhVVQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","addTodo","deleteTodo","editTodo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","todos","state","dispatch","text","setText","editIndex","setEditIndex","handleAddTodo","trim","handleEditTodo","index","todo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/DELL/todoApp-redux-react/src/redux/Todo App.js"],"sourcesContent":["// Import necessary modules from React and React Redux\r\nimport React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Import action creators from local actions file\r\nimport { addTodo, deleteTodo, editTodo } from \"./actions\";\r\n\r\n// Import CSS file for styling\r\nimport \"./App.css\";\r\n\r\n// Define the functional component App\r\nfunction App() {\r\n  // Get the todos array from the Redux store\r\n  const todos = useSelector((state) => state.todos);\r\n\r\n  // Get the dispatch function from the Redux store\r\n  const dispatch = useDispatch();\r\n\r\n  // Initialize state variables using useState hook\r\n  const [text, setText] = useState(\"\"); // for input text\r\n  const [editIndex, setEditIndex] = useState(null); // for tracking index of todo being edited\r\n\r\n  // Function to handle adding or editing a todo\r\n  const handleAddTodo = () => {\r\n    if (text.trim() !== \"\") { // Check if input text is not empty\r\n      if (editIndex !== null) { // If editing an existing todo\r\n        dispatch(editTodo(editIndex, text)); // Dispatch editTodo action\r\n        setEditIndex(null); // Reset editIndex\r\n      } else { // If adding a new todo\r\n        dispatch(addTodo(text)); // Dispatch addTodo action\r\n      }\r\n      setText(\"\"); // Clear the input text\r\n    }\r\n  };\r\n\r\n  // Function to handle editing a todo\r\n  const handleEditTodo = (index, todo) => {\r\n    setText(todo); // Set input text to the current todo text\r\n    setEditIndex(index); // Set the index of todo being edited\r\n  };\r\n\r\n  // Render the component\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>Todo App using Redux</h1>\r\n      {/* Input field and add/edit button */}\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          placeholder=\"Enter a new task...\"\r\n        />\r\n        <button className=\"add-button\" onClick={handleAddTodo}>\r\n          {editIndex !== null ? \"Edit\" : \"Add\"}\r\n        </button>\r\n      </div>\r\n      {/* List of todos */}\r\n      <ul className=\"todo-list\">\r\n        {/* Map over todos array to render each todo */}\r\n        {todos.map((todo, index) => (\r\n          <li key={index} className=\"todo-item\">\r\n            {editIndex === index ? ( // If editing the current todo\r\n              <input\r\n                type=\"text\"\r\n                value={text} // Set the value to the current todo text\r\n                onChange={(e) => setText(e.target.value)}\r\n              />\r\n            ) : (\r\n              // If not editing, display todo text\r\n              <span className=\"todo-text\">{todo.todo}</span>\r\n            )}\r\n            {/* Buttons for editing/deleting todos */}\r\n            <div className=\"button-container\">\r\n              {editIndex === index ? ( // If editing the current todo\r\n                <>\r\n                  <button\r\n                    className=\"save-button\"\r\n                    onClick={() => {\r\n                      dispatch(editTodo(index, text)); // Dispatch editTodo action\r\n                      setEditIndex(null); // Reset editIndex\r\n                      setText(\"\"); // Clear input text\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button\r\n                    className=\"cancel-button\"\r\n                    onClick={() => {\r\n                      setEditIndex(null); // Reset editIndex\r\n                      setText(\"\"); // Clear input text\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                // If not editing, display edit/delete buttons\r\n                <>\r\n                  <button\r\n                    className=\"edit-button\"\r\n                    onClick={() => handleEditTodo(index, todo.todo)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"delete-button\"\r\n                    onClick={() => dispatch(deleteTodo(index))}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Export the App component as the default export\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}